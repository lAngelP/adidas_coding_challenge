version: "3.2"
services:

  web:
    image: nginx
    ports:
      - "8443:443"
      - "8000:80"
    volumes:
#      - ./certs/rootCAPublic.pem:/etc/nginx/ca.pem
#      - ./certs/gateway.crt:/etc/nginx/ssl/server.crt
#      - ./certs/gateway.key:/etc/nginx/ssl/server.key
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    command: [ nginx-debug, '-g', 'daemon off;' ]
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./.docker-conf/postgresql/data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    hostname: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - ./.docker-conf/zookeper:/var/lib/zookeeperpero
  kafka:
    image: confluentinc/cp-enterprise-kafka:6.1.1
    hostname: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9999:9999"
    environment:
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      #KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:29092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      #KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: KAFKA:9092
    volumes:
      - ./.docker-conf/kafka:/var/lib/kafka/data
      - ./.docker-conf/config/kafka:/tmp/kafka
    depends_on:
      - zookeeper

  subscription-api:
    build: ./subscription-api
    container_name: 'subscription-api'
    environment:
      - "SPRING.DATASOURCE.URL=jdbc:postgresql://db:5432/subscription-api"
      - "KAFKA.BOOTSTRAP=kafka:9092"
      - "KAFKA.MAIL_REQUEST_TOPIC=email_requests"
    ports:
      - "8081:8443"
#    volumes:
#      - ./certs/subscription-api.p12:/opt/subscription-api.p12

  email-pcs:
    build: ./email-pcs
    container_name: 'email-pcs'
    environment:
      - "SPRING.CLOUD.STREAM.KAFKA.BINDER.BROKERS=kafka:9092"
      - "SPRING.CLOUD.STREAM.FUNCTION.BINDINGS.PROCESS-IN-0=email_requests"
    ports:
      - "8082:8443"
#    volumes:
#      - ./certs/subscription-api.p12:/opt/subscription-api.p12